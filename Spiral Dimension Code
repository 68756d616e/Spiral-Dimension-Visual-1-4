# Spiral Deimsnion 

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

# Create a figure with subplots for 1D to 4D representations
fig = plt.figure(figsize=(16, 4))

# 1D: Line (no spiral possible, but show points along a line)
ax1 = fig.add_subplot(1, 4, 1)
x1 = np.linspace(0, 10, 100)
ax1.plot(x1, np.zeros_like(x1), 'r')
ax1.set_title("1D: Line")
ax1.set_yticks([])
ax1.set_xticks([])
ax1.set_xlim(0, 10)
ax1.set_box_aspect(0.5)

# 2D: Spiral in a plane
ax2 = fig.add_subplot(1, 4, 2)
theta = np.linspace(0, 4 * np.pi, 200)
r = theta
x2 = r * np.cos(theta)
y2 = r * np.sin(theta)
ax2.plot(x2, y2, 'g')
ax2.set_title("2D: Flat Spiral")
ax2.set_xticks([])
ax2.set_yticks([])
ax2.set_aspect('equal')

# 3D: Helix
ax3 = fig.add_subplot(1, 4, 3, projection='3d')
z3 = np.linspace(0, 10, 200)
x3 = np.cos(z3 * 2)
y3 = np.sin(z3 * 2)
ax3.plot(x3, y3, z3, 'b')
ax3.set_title("3D: Helix")
ax3.set_xticks([])
ax3.set_yticks([])
ax3.set_zticks([])

# 4D: Spiral with color representing 4th dimension (time or another axis)
ax4 = fig.add_subplot(1, 4, 4, projection='3d')
z4 = np.linspace(0, 10, 200)
x4 = np.cos(z4 * 2)
y4 = np.sin(z4 * 2)
c4 = z4  # Color as 4th dimension
sc = ax4.scatter(x4, y4, z4, c=c4, cmap='plasma', s=2)
ax4.set_title("4D: Color-Coded Spiral")
ax4.set_xticks([])
ax4.set_yticks([])
ax4.set_zticks([])

plt.tight_layout()
plt.show()
